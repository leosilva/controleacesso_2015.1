/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package controleacesso.apresentacao;

import controleacesso.dominio.Sistema;
import controleacesso.negocio.SistemaController;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Classe que representa a janela da listagem de sistemas.
 * @author leosilva
 */
public class ListarSistema extends javax.swing.JInternalFrame {
    
    // esta tela chama os método do controlador de sistemas. Assim, o controlador é instanciado nesta linha.
    SistemaController sistemaController = new SistemaController();
    
    // colunas do jTable usado nesta tela.
    String[] colunas = {"Sigla", "Nome"};

    /**
     * Creates new form ListarSistema
     */
    public ListarSistema() {
        initComponents();
        listarSistemas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSistemas = new javax.swing.JTable();

        setClosable(true);
        setTitle("Lista de Sistemas");

        jTableSistemas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Sigla", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableSistemas);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 376, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 275, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableSistemas;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que lista os sistemas e atualiza o jTable com os dados retornados.
     */
    private void listarSistemas() {
        try {
            /*
             * chama o método listarSistemas() do controlador. Esse método passa a chamada
             * para o DAO, que, por fim, realiza a consulta no banco de dados.
             */
            List<Sistema> listaSistemas = sistemaController.listarSistemas();
            DefaultTableModel model = new DefaultTableModel(colunas, 0);
            // a partir do retorno, preenche o jTable.
            for (Sistema sistema : listaSistemas) {
                model.addRow(new Object[] {
                    sistema.getSigla(),
                    sistema.getNome()
                });
            }
            jTableSistemas.setModel(model);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao listar os sistemas!", "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }
}
